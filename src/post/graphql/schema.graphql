scalar CommentCursor

interface Commentable {
  comments: [Post]!
  comment_count: Int!
}

type CommentConnection {
  pageInfo: PageInfo!
  edges: [CommentEdge]
}

type CommentEdge {
  node: Post
  cursor: CommentCursor!
}

type PageInfo {
  hasNextPage: Boolean!
  startCursor: CommentCursor
}

type Post implements Node & Commentable & Reactable {
  id: ID!
  createdAt: Date!
  comments(flat: Boolean = False, first: Int, after: CommentCursor): [Post]!
  content: String!
  comment_count: Int!
  reaction_counts: [ReactionCount]!
}

type Query {
  posts(cursor: ID, limit: Int): [Post]!
}

type Mutation {
  post(content: String!, postId: ID): Post
}
