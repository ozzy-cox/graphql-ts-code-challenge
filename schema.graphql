scalar Date

interface Node {
  id: ID!
}

interface Commentable {
  comments: [Post!]!
  comment_count: Int!
}

type Post implements Node & Commentable {
  id: ID!
  createdAt: Date!
  comments(flat: Boolean = False): [Post!]!
  content: String!
  comment_count: Int!
  reaction_counts: [ReactionCount!]!
}

type ReactionCount{
  type: ReactionType!
  count: Int!
}

enum ReactionType {
  THUMBSUP
  THUMBSDOWN
  ROCKET
  HEART
}

type Query {
  node(id: ID!): Node
  posts(cursor: ID, limit: Int): [Post]!
}

type Mutation {
  post(content: String!, postId: ID): Post
  react(type: ReactionType!, postId: ID!): Post
}
